{"remainingRequest":"E:\\WorkSpace\\cakeProject\\cake\\node_modules\\babel-loader\\lib\\index.js!E:\\WorkSpace\\cakeProject\\cake\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\WorkSpace\\cakeProject\\cake\\src\\api\\http.js","dependencies":[{"path":"E:\\WorkSpace\\cakeProject\\cake\\src\\api\\http.js","mtime":1575623767582},{"path":"E:\\WorkSpace\\cakeProject\\cake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WorkSpace\\cakeProject\\cake\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\WorkSpace\\cakeProject\\cake\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwoKdmFyIF90aGlzID0gdGhpczsKCi8qKg0KICogYXhpb3PlsIHoo4UNCiAqIOivt+axguaLpuaIquOAgeWTjeW6lOaLpuaIquOAgemUmeivr+e7n+S4gOWkhOeQhg0KICovCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAiLi4vcm91dGVyIjsKaW1wb3J0IHN0b3JlIGZyb20gIi4uL3N0b3JlL2luZGV4IjsKLyoqDQogKiDmj5DnpLrlh73mlbANCiAqLwoKdmFyIHRpcCA9IGZ1bmN0aW9uIHRpcChtc2cpIHsKICB2YXIgdHlwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJ2luZm8nOwoKICBfdGhpcy4kbWVzc2FnZSh7CiAgICBtZXNzYWdlOiBtc2csCiAgICB0eXBlOiB0eXBlLAogICAgZHVyYXRpb246IDE1MDAKICB9KTsKfTsKLyoqDQogKiDot7PovaznmbvlvZXpobUNCiAqIOaQuuW4puW9k+WJjemhtemdoui3r+eUse+8jOS7peacn+WcqOeZu+W9lemhtemdouWujOaIkOeZu+W9leWQjui/lOWbnuW9k+WJjemhtemdog0KICovCgoKdmFyIHRvTG9naW4gPSBmdW5jdGlvbiB0b0xvZ2luKCkgewogIHJvdXRlci5yZXBsYWNlKHsKICAgIHBhdGg6ICcvbG9naW4nLAogICAgcXVlcnk6IHsKICAgICAgcmVkaXJlY3Q6IHJvdXRlci5jdXJyZW50Um91dGUuZnVsbFBhdGgKICAgIH0KICB9KTsKfTsKLyoqDQogKiDlkIzkuIDor7fmsYLlnLDlnYANCiAqLwoKCnZhciBCQVNFX1VSTCA9ICdsb2NhbGhvc3Q6MzAwMC8nOwovKioNCiAqIOivt+axguWksei0peWQjueahOmUmeivr+e7n+S4gOWkhOeQhg0KICogQHBhcmFtIHtOdW1iZXJ9IHN0YXR1cyDor7fmsYLlpLHotKXnmoTnirbmgIHnoIENCiAqLwoKdmFyIGVycm9ySGFuZGxlID0gZnVuY3Rpb24gZXJyb3JIYW5kbGUoc3RhdHVzLCBvdGhlcikgewogIC8vIOeKtuaAgeeggeWIpOaWrQogIHN3aXRjaCAoc3RhdHVzKSB7CiAgICAvLyA0MDE6IOacqueZu+W9leeKtuaAge+8jOi3s+i9rOeZu+W9lemhtQogICAgY2FzZSA0MDE6CiAgICAgIHRvTG9naW4oKTsKICAgICAgYnJlYWs7CiAgICAvLyA0MDMgdG9rZW7ov4fmnJ8KICAgIC8vIOa4hemZpHRva2Vu5bm26Lez6L2s55m75b2V6aG1CgogICAgY2FzZSA0MDM6CiAgICAgIHRpcCgn55m75b2V6L+H5pyf77yM6K+36YeN5paw55m75b2VJyk7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogICAgICBzdG9yZS5jb21taXQoJ2xvZ291dCcsIGZhbHNlKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgdG9Mb2dpbigpOwogICAgICB9LCAxMDAwKTsKICAgICAgYnJlYWs7CiAgICAvLyA0MDTor7fmsYLkuI3lrZjlnKgKCiAgICBjYXNlIDQwNDoKICAgICAgdGlwKCfor7fmsYLnmoTotYTmupDkuI3lrZjlnKgnLCAnZXJyb3InKTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgY29uc29sZS5sb2cob3RoZXIpOwogIH0KfTsgLy8g5Yib5bu6YXhpb3Plrp7kvosKCgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6IEJBU0VfVVJMLAogIHRpbWVvdXQ6IDEwMDAgKiAxMgp9KTsgLy8g6K6+572ucG9zdOivt+axguWktAoKaW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnOwovKioNCiAqIOivt+axguaLpuaIquWZqA0KICog5q+P5qyh6K+35rGC5YmN77yM5aaC5p6c5a2Y5ZyodG9rZW7liJnlnKjor7fmsYLlpLTkuK3mkLrluKZ0b2tlbg0KICovCgppbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIOeZu+W9lea1geeoi+aOp+WItuS4re+8jOagueaNruacrOWcsOaYr+WQpuWtmOWcqHRva2Vu5Yik5pat55So5oi355qE55m75b2V5oOF5Ya1CiAgLy8g5L2G5piv5Y2z5L2/dG9rZW7lrZjlnKjvvIzkuZ/mnInlj6/og710b2tlbuaYr+i/h+acn+eahO+8jOaJgOS7peWcqOavj+asoeeahOivt+axguWktOS4reaQuuW4pnRva2VuCiAgLy8g5ZCO5Y+w5qC55o2u5pC65bim55qEdG9rZW7liKTmlq3nlKjmiLfnmoTnmbvlvZXmg4XlhrXvvIzlubbov5Tlm57nu5nmiJHku6zlr7nlupTnmoTnirbmgIHnoIEKICAvLyDogIzlkI7miJHku6zlj6/ku6XlnKjlk43lupTmi6bmiKrlmajkuK3vvIzmoLnmja7nirbmgIHnoIHov5vooYzkuIDkupvnu5/kuIDnmoTmk43kvZzjgIIKICB2YXIgdG9rZW4gPSBzdG9yZS5zdGF0ZS50b2tlbjsKICB0b2tlbiAmJiAoY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IHRva2VuKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5lcnJvcihlcnJvcik7Cn0pOyAvLyDlk43lupTmi6bmiKrlmagKCmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoIC8vIOivt+axguaIkOWKnwpmdW5jdGlvbiAocmVzKSB7CiAgcmV0dXJuIHJlcy5zdGF0dXMgPT09IDIwMCA/IFByb21pc2UucmVzb2x2ZShyZXMpIDogUHJvbWlzZS5yZWplY3QocmVzKTsKfSwgLy8g6K+35rGC5aSx6LSlCmZ1bmN0aW9uIChlcnJvcikgewogIHZhciByZXNwb25zZSA9IGVycm9yLnJlc3BvbnNlOwoKICBpZiAocmVzcG9uc2UpIHsKICAgIC8vIOivt+axguW3suWPkeWHuu+8jOS9huaYr+S4jeWcqDJ4eOeahOiMg+WbtAogICAgZXJyb3JIYW5kbGUocmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5kYXRhLm1lc3NhZ2UpOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKTsKICB9IGVsc2UgewogICAgLy8g5aSE55CG5pat572R55qE5oOF5Ya1CiAgICAvLyBlZzror7fmsYLotoXml7bmiJbmlq3nvZHml7bvvIzmm7TmlrBzdGF0ZeeahG5ldHdvcmvnirbmgIEKICAgIC8vIG5ldHdvcmvnirbmgIHlnKhhcHAudnVl5Lit5o6n5Yi2552A5LiA5Liq5YWo5bGA55qE5pat572R5o+Q56S657uE5Lu255qE5pi+56S66ZqQ6JePCiAgICAvLyDlhbPkuo7mlq3nvZHnu4Tku7bkuK3nmoTliLfmlrDph43mlrDojrflj5bmlbDmja7vvIzkvJrlnKjmlq3nvZHnu4Tku7bkuK3or7TmmI4KICAgIGlmICghd2luZG93Lm5hdmlnYXRvci5vbkxpbmUpIHsvLyBoNeS9v+eUqCBwY+W/veeVpQogICAgICAvLyBzdG9yZS5jb21taXQoJ2NoYW5nZU5ldHdvcmsnLCBmYWxzZSk7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgfQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlOw=="},{"version":3,"sources":["E:/WorkSpace/cakeProject/cake/src/api/http.js"],"names":["axios","router","store","tip","msg","type","$message","message","duration","toLogin","replace","path","query","redirect","currentRoute","fullPath","BASE_URL","errorHandle","status","other","localStorage","removeItem","commit","setTimeout","console","log","instance","create","baseURL","timeout","defaults","headers","post","interceptors","request","use","config","token","state","Authorization","error","Promise","response","res","resolve","reject","data","window","navigator","onLine"],"mappings":"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","sourcesContent":["/**\r\n * axios封装\r\n * 请求拦截、响应拦截、错误统一处理\r\n */\r\nimport axios from 'axios';\r\nimport router from '../router';\r\nimport store from '../store/index';\r\n\r\n/**\r\n * 提示函数\r\n */\r\nconst tip = (msg,type = 'info') => {\r\n  this.$message({\r\n    message: msg,\r\n    type: type,\r\n    duration: 1500\r\n  });\r\n}\r\n\r\n/**\r\n * 跳转登录页\r\n * 携带当前页面路由，以期在登录页面完成登录后返回当前页面\r\n */\r\nconst toLogin = () => {\r\n  router.replace({\r\n    path: '/login',\r\n    query: {\r\n      redirect: router.currentRoute.fullPath\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 同一请求地址\r\n */\r\nconst BASE_URL = 'localhost:3000/';\r\n\r\n/**\r\n * 请求失败后的错误统一处理\r\n * @param {Number} status 请求失败的状态码\r\n */\r\nconst errorHandle = (status, other) => {\r\n  // 状态码判断\r\n  switch (status) {\r\n    // 401: 未登录状态，跳转登录页\r\n    case 401:\r\n      toLogin();\r\n      break;\r\n    // 403 token过期\r\n    // 清除token并跳转登录页\r\n    case 403:\r\n      tip('登录过期，请重新登录');\r\n      localStorage.removeItem('token');\r\n      store.commit('logout', false);\r\n      setTimeout(() => {\r\n        toLogin();\r\n      }, 1000);\r\n      break;\r\n    // 404请求不存在\r\n    case 404:\r\n      tip('请求的资源不存在','error');\r\n      break;\r\n    default:\r\n      console.log(other);\r\n  }}\r\n\r\n// 创建axios实例\r\nvar instance = axios.create({baseURL:BASE_URL,timeout: 1000 * 12});\r\n// 设置post请求头\r\ninstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n/**\r\n * 请求拦截器\r\n * 每次请求前，如果存在token则在请求头中携带token\r\n */\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    // 登录流程控制中，根据本地是否存在token判断用户的登录情况\r\n    // 但是即使token存在，也有可能token是过期的，所以在每次的请求头中携带token\r\n    // 后台根据携带的token判断用户的登录情况，并返回给我们对应的状态码\r\n    // 而后我们可以在响应拦截器中，根据状态码进行一些统一的操作。\r\n    const token = store.state.token;\r\n    token && (config.headers.Authorization = token);\r\n    return config;\r\n  },\r\n  error => Promise.error(error))\r\n\r\n// 响应拦截器\r\ninstance.interceptors.response.use(\r\n  // 请求成功\r\n  res => res.status === 200 ? Promise.resolve(res) : Promise.reject(res),\r\n  // 请求失败\r\n  error => {\r\n    const { response } = error;\r\n    if (response) {\r\n      // 请求已发出，但是不在2xx的范围\r\n      errorHandle(response.status, response.data.message);\r\n      return Promise.reject(response);\r\n    } else {\r\n      // 处理断网的情况\r\n      // eg:请求超时或断网时，更新state的network状态\r\n      // network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏\r\n      // 关于断网组件中的刷新重新获取数据，会在断网组件中说明\r\n      if (!window.navigator.onLine) {\r\n        // h5使用 pc忽略\r\n        // store.commit('changeNetwork', false);\r\n      } else {\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n  });\r\n\r\nexport default instance;\r\n"]}]}